{"version":3,"sources":["App.tsx","reportWebVitals.ts","theme.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","textAlign","header","margin","spacing","marginBottom","title","display","paddingLeft","fontWeight","box","position","top","red","color","green","paper","height","width","border","backgroundColor","Board","reset","classes","React","useState","player","setPlayer","winner","setWinner","boards","setBoards","handleClick","r","c","data","col0","col1","col2","checkVertical","row0","row1","row2","checkHorizontal","diag0","diag1","checkDiagonal","p","StrictMode","className","Typography","role","variant","gutterBottom","clsx","Button","onClick","map","board","Grid","container","justify","value","item","Paper","elevation","undefined","App","boardKey","setKey","Container","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rawTheme","createMuiTheme","palette","primary","main","light","secondary","dark","warning","error","success","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontHeader","text","textTransform","responsiveFontSizes","background","default","common","white","placeholder","grey","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","body1","body2","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.7e22ba52.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport Container from '@material-ui/core/Container'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      textAlign: 'center',\n    },\n    header: {\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n      marginBottom: theme.spacing(3),\n    },\n    title: {\n      display: 'inline',\n      paddingLeft: theme.spacing(1),\n      fontWeight: 600,\n    },\n    box: {\n      paddingLeft: 0,\n      position: 'relative',\n      top: '12px',\n    },\n    red: {\n      color: 'red',\n    },\n    green: {\n      color: 'green',\n    },\n    paper: {\n      height: 50,\n      width: 50,\n      border: '1px solid ',\n      backgroundColor: 'rgba(0, 0, 0, 0.12)'\n    },\n  }),\n)\n\nexport interface BoardProp {\n  reset: () => void\n}\n\n\nconst Board = ({ reset }: BoardProp) => {\n  const classes = useStyles()\n  const [player, setPlayer] = React.useState(true)\n  const [winner, setWinner] = React.useState<string>()\n  const [boards, setBoards] = React.useState([\n    [0, 0, 0],\n    [0, 0, 0],\n    [0, 0, 0],\n  ])\n  const checkVertical = (data: any) => {\n    const col0 = data[0][0] + data[1][0] + data[2][0]\n    const col1 = data[0][1] + data[1][1] + data[2][1]\n    const col2 = data[0][2] + data[1][2] + data[2][2]\n    if (col0 === 3 || col1 === 3 || col2 === 3) setWinner('X')\n    else if (col0 === -3 || col1 === -3 || col2 === -3) setWinner('O')\n  }\n  const checkHorizontal = (data: any) => {\n    const row0 = data[0][0] + data[0][1] + data[0][2]\n    const row1 = data[1][0] + data[1][1] + data[1][2]\n    const row2 = data[2][0] + data[2][1] + data[2][2]\n    if (row0 === 3 || row1 === 3 || row2 === 3) setWinner('X')\n    else if (row0 === -3 || row1 === -3 || row2 === -3) setWinner('O')\n  }\n  const checkDiagonal = (data: any) => {\n    const diag0 = data[0][0] + data[1][1] + data[2][2]\n    const diag1 = data[0][2] + data[1][1] + data[2][0]\n    if (diag0 === 3 || diag1 === 3) setWinner('X')\n    else if (diag0 === -3 || diag1 === -3) setWinner('O')\n  }\n  const handleClick = (r: number, c: number) => {\n    let data = [...boards]\n    if (!winner && data[r][c] === 0) {\n      data[r][c] = player ? 1 : -1\n      setBoards(data)\n      checkVertical(data)\n      checkHorizontal(data)\n      checkDiagonal(data)\n      setPlayer(p => !p)\n    }\n  }\n\n  return (\n    <React.StrictMode>\n      <header className={classes.header}>\n        <Typography role='title' variant='h6' gutterBottom>\n          Current Player:\n          {\n            winner ?\n              <></>\n              :\n              <Typography\n                variant='body1'\n                gutterBottom\n                className={clsx(classes.title, player ? classes.red : classes.green)}\n              >\n                {player ? 'X' : 'O'}\n              </Typography>\n          }\n        </Typography>\n        <Typography role='winner' variant='h6' gutterBottom>\n          Winner:\n          {\n            winner ?\n              <Typography\n                variant='body1'\n                gutterBottom\n                className={clsx(classes.title, winner === 'X' ? classes.red : classes.green)}\n              >\n                {winner}\n              </Typography>\n              :\n              <Typography\n                variant='body1'\n                gutterBottom\n                className={classes.title}\n              >\n                None\n              </Typography>\n          }\n\n        </Typography>\n        <Button\n          variant='contained'\n          onClick={reset}\n          color='secondary'\n          role='reset'\n        >\n          Reset\n          </Button>\n      </header>\n      {\n        boards.map((board, r) => {\n          return (\n            <Grid key={`row-${r}`} container justify='center' spacing={0}>\n              {board.map((value, c) => (\n                <Grid key={`col-${r}-${c}`} item>\n                  <Paper\n                    role={`box-${r}-${c}`}\n                    className={classes.paper}\n                    elevation={0}\n                    onClick={() => handleClick(r, c)}\n                  >\n                    <Typography\n                      variant='body1'\n                      gutterBottom\n                      className={clsx(classes.title, classes.box, value === 1 ? classes.red : classes.green)}\n                    >\n                      {value === 1 ? 'X' : undefined}\n                      {value === -1 ? 'O' : undefined}\n                    </Typography>\n                  </Paper>\n                </Grid>\n              ))}\n            </Grid>\n          )\n        })\n      }\n\n\n\n    </React.StrictMode>\n  )\n\n}\n\nconst App = () => {\n  const classes = useStyles()\n  const [boardKey, setKey] = React.useState(1)\n  const hanldeReset = () => setKey(p => p + 1)\n  return (\n    <Container maxWidth='sm' className={classes.root}>\n      <Board key={boardKey} reset={hanldeReset} />\n    </Container>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\nimport { green, grey, red } from '@material-ui/core/colors';\n\nlet rawTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#000000',\n            light: '#eeeeee',\n        },\n        secondary: {\n            light: '#fff5f8',\n            main: '#e50914',\n            dark: '#d10000',\n        },\n        warning: {\n            main: '#ffc071',\n            dark: '#ffb25e',\n        },\n        error: {\n            light: red[50],\n            main: red[500],\n            dark: red[700],\n        },\n        success: {\n            light: green[50],\n            main: green[500],\n            dark: green[700],\n        },\n    },\n    typography: {\n        fontFamily: \"'Roboto Condensed', sans-serif\",\n        fontSize: 14,\n        fontWeightLight: 300, // Work Sans\n        fontWeightRegular: 400, // Work Sans\n        fontWeightMedium: 700, // Roboto Condensed\n    },\n});\n\nconst fontHeader = {\n    color: rawTheme.palette.text.primary,\n    fontWeight: rawTheme.typography.fontWeightMedium,\n    fontFamily: rawTheme.typography.fontFamily,\n    textTransform: 'uppercase',\n};\nrawTheme = responsiveFontSizes(rawTheme);\nconst theme = {\n    ...rawTheme,\n    palette: {\n        ...rawTheme.palette,\n        background: {\n            ...rawTheme.palette.background,\n            default: rawTheme.palette.common.white,\n            placeholder: grey[200],\n        },\n    },\n    typography: {\n        ...rawTheme.typography,\n        fontHeader,\n        h1: {\n            ...rawTheme.typography.h1,\n            ...fontHeader,\n            letterSpacing: 0,\n            fontSize: 60,\n        },\n        h2: {\n            ...rawTheme.typography.h2,\n            ...fontHeader,\n            fontSize: 48,\n        },\n        h3: {\n            ...rawTheme.typography.h3,\n            ...fontHeader,\n            fontSize: 42,\n        },\n        h4: {\n            ...rawTheme.typography.h4,\n            ...fontHeader,\n            fontSize: 36,\n        },\n        h5: {\n            ...rawTheme.typography.h5,\n            fontSize: 20,\n            fontWeight: rawTheme.typography.fontWeightLight,\n        },\n        h6: {\n            ...rawTheme.typography.h6,\n            ...fontHeader,\n            fontSize: 18,\n        },\n        subtitle1: {\n            ...rawTheme.typography.subtitle1,\n            fontSize: 18,\n        },\n        body1: {\n            ...rawTheme.typography.body2,\n            fontWeight: rawTheme.typography.fontWeightRegular,\n            fontSize: 16,\n        },\n        body2: {\n            ...rawTheme.typography.body1,\n            fontSize: 14,\n        },\n    },\n};\n\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ThemeProvider from '@material-ui/styles/ThemeProvider'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport theme from './theme'\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}